# This Dockerfile builds an image containing Mac and Linux ARM64/AMD64 versions of the etcd.
# The resulting image is used to build the statically-linked openshift-installer binary.

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.18 AS macbuilder

ENV GO_COMPLIANCE_EXCLUDE=".*"

WORKDIR /go/src/go.etcd.io/etcd
COPY . .

RUN find $GOPATH
RUN export GOFLAGS='-mod=readonly' && export GO_BUILD_FLAGS='-v' \
	&& CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 ./build.sh

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.18 AS macarmbuilder

ENV GO_COMPLIANCE_EXCLUDE=".*"

WORKDIR /go/src/go.etcd.io/etcd
COPY . .

RUN export GOFLAGS='-mod=readonly' && export GO_BUILD_FLAGS='-v' \
	&& CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 ./build.sh

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.18 AS linuxbuilder

ENV GO_COMPLIANCE_EXCLUDE=".*"

WORKDIR /go/src/go.etcd.io/etcd
COPY . .
RUN export GOFLAGS='-mod=readonly' && export GO_BUILD_FLAGS='-v' \
	&& CGO_ENABLED=0 GOOS=linux GOARCH=amd64 ./build.sh

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.18 AS linuxarmbuilder

ENV GO_COMPLIANCE_EXCLUDE=".*"

WORKDIR /go/src/go.etcd.io/etcd
COPY . .
RUN export GOFLAGS='-mod=readonly' && export GO_BUILD_FLAGS='-v' \
	&& CGO_ENABLED=0 GOOS=linux GOARCH=arm64 ./build.sh

FROM registry.ci.openshift.org/ocp/builder:rhel-9-golang-1.22-openshift-4.18 AS builder
ENV GO_COMPLIANCE_EXCLUDE=".*"

WORKDIR /go/src/go.etcd.io/etcd
COPY . .
RUN export GOFLAGS='-mod=readonly' && export GO_BUILD_FLAGS='-v' \
	&& CGO_ENABLED=0 ./build.sh
RUN mkdir -p /usr/share/openshift/$(go env GOOS)/$(go env GOHOSTARCH) && \
	mv bin/etcd /usr/share/openshift/$(go env GOOS)/$(go env GOHOSTARCH)/

# stage 2
FROM registry.ci.openshift.org/ocp/4.18:base-rhel9

RUN yum install --setopt=tsflags=nodocs -y jq && yum clean all && rm -rf /var/cache/yum/*

COPY --from=macbuilder /go/src/go.etcd.io/etcd/bin/etcd /usr/share/openshift/darwin/amd64/etcd
COPY --from=macarmbuilder /go/src/go.etcd.io/etcd/bin/etcd /usr/share/openshift/darwin/arm64/etcd
COPY --from=linuxbuilder /go/src/go.etcd.io/etcd/bin/etcd /usr/share/openshift/linux/amd64/etcd
COPY --from=linuxarmbuilder /go/src/go.etcd.io/etcd/bin/etcd /usr/share/openshift/linux/arm64/etcd
COPY --from=builder /usr/share/openshift/ /usr/share/openshift/

# This image is not an operator, it is only used as part of the build pipeline
LABEL io.openshift.release.operator=false
